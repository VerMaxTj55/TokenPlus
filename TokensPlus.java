package org.tokensplus.tokensplus;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.InventoryHolder;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.command.ConsoleCommandSender;
import org.bukkit.event.Listener;
import org.bukkit.event.EventHandler;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerInteractEvent;

import java.util.HashMap;
import java.util.Map;

public class TokensPlus extends JavaPlugin implements CommandExecutor, Listener {

    private final Map<String, Integer> tokenBalance = new HashMap<>();

    @Override
    public void onEnable() {
        getCommand("tok").setExecutor(this);
        Bukkit.getPluginManager().registerEvents(this, this);
        getLogger().info("TokensPlus –≤–∫–ª—é—á–µ–Ω");
    }

    @Override
    public void onDisable() {
        getLogger().info("TokensPlus –≤—ã–∫–ª—é—á–µ–Ω");
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (command.getName().equalsIgnoreCase("tok")) {
            if (args.length < 1) {
                sender.sendMessage(ChatColor.RED + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /tok <–∫–æ–º–∞–Ω–¥–∞> [–∞—Ä–≥—É–º–µ–Ω—Ç—ã]");
                return true;
            }

            String subCommand = args[0];
            if (subCommand.equalsIgnoreCase("give") && args.length == 3) {
                return handleGive(sender, args[1], args[2]);
            } else if (subCommand.equalsIgnoreCase("set") && args.length == 3) {
                return handleSet(sender, args[1], args[2]);
            } else if (subCommand.equalsIgnoreCase("mines") && args.length == 3) {
                return handleMines(sender, args[1], args[2]);
            } else if (subCommand.equalsIgnoreCase("see") && args.length == 2) {
                return handleSee(sender, args[1]);
            } else if (subCommand.equalsIgnoreCase("took") && args.length == 3) {
                return handleTook(sender, args[1], args[2]);
            } else if (subCommand.equalsIgnoreCase("add") && args.length == 3) {
                return handleAdd(sender, args[1], args[2]);
            } else if (subCommand.equalsIgnoreCase("help")) {
                return handleHelp(sender);
            } else if (subCommand.equalsIgnoreCase("gui")) {
                return handleGui((Player) sender);
            } else {
                sender.sendMessage(ChatColor.RED + "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.");
                return true;
            }
        }
        return false;
    }

    private boolean handleGive(CommandSender sender, String playerName, String amount) {
        if (!(sender instanceof ConsoleCommandSender) && !sender.hasPermission("tokensplus.admin")) {
            sender.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
            return true;
        }

        Player player = Bukkit.getPlayer(playerName);
        if (player == null) {
            sender.sendMessage(ChatColor.RED + "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return true;
        }

        try {
            int tokens = Integer.parseInt(amount);
            if (tokens <= 0) {
                sender.sendMessage(ChatColor.RED + "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.");
                return true;
            }

            tokenBalance.put(player.getName(), tokenBalance.getOrDefault(player.getName(), 0) + tokens);
            sender.sendMessage(ChatColor.GREEN + "–í—ã–¥–∞–ª–∏ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤ –∏–≥—Ä–æ–∫—É " + player.getName());
            player.sendMessage(ChatColor.GREEN + "–í—ã –ø–æ–ª—É—á–∏–ª–∏ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤!");

        } catch (NumberFormatException e) {
            sender.sendMessage(ChatColor.RED + "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.");
        }
        return true;
    }

    private boolean handleSet(CommandSender sender, String playerName, String amount) {
        if (!(sender instanceof ConsoleCommandSender) && !sender.hasPermission("tokensplus.admin")) {
            sender.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
            return true;
        }

        Player player = Bukkit.getPlayer(playerName);
        if (player == null) {
            sender.sendMessage(ChatColor.RED + "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return true;
        }

        try {
            int tokens = Integer.parseInt(amount);
            if (tokens < 0) {
                sender.sendMessage(ChatColor.RED + "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.");
                return true;
            }

            tokenBalance.put(player.getName(), tokens);
            sender.sendMessage(ChatColor.GREEN + "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤ –∏–≥—Ä–æ–∫—É " + player.getName());
            player.sendMessage(ChatColor.GREEN + "–í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ " + tokens);

        } catch (NumberFormatException e) {
            sender.sendMessage(ChatColor.RED + "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.");
        }
        return true;
    }

    private boolean handleMines(CommandSender sender, String playerName, String amount) {
        return handleAdjustment(sender, playerName, amount, true);
    }

    private boolean handleTook(CommandSender sender, String playerName, String amount) {
        return handleAdjustment(sender, playerName, amount, false);
    }

    private boolean handleAdjustment(CommandSender sender, String playerName, String amount, boolean isMines) {
        if (!(sender instanceof ConsoleCommandSender) && !sender.hasPermission("tokensplus.admin")) {
            sender.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
            return true;
        }

        Player player = Bukkit.getPlayer(playerName);
        if (player == null) {
            sender.sendMessage(ChatColor.RED + "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return true;
        }

        try {
            int tokens = Integer.parseInt(amount);
            if (tokens <= 0) {
                sender.sendMessage(ChatColor.RED + "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.");
                return true;
            }

            int currentTokens = tokenBalance.getOrDefault(player.getName(), 0);
            if (isMines) {
                if (currentTokens < tokens) {
                    sender.sendMessage(ChatColor.RED + "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤.");
                    return true;
                }
                tokenBalance.put(player.getName(), currentTokens - tokens);
                sender.sendMessage(ChatColor.GREEN + "–£–±—Ä–∞–Ω–æ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞ " + player.getName());
                player.sendMessage(ChatColor.GREEN + "–° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞" + tokens + " —Ç–æ–∫–µ–Ω–æ–≤ –±—ã–ª–æ —É–±—Ä–∞–Ω–æ.");
            } else {
                tokenBalance.put(player.getName(), currentTokens + tokens);
                sender.sendMessage(ChatColor.GREEN + "–î–æ–±–∞–≤–ª–µ–Ω–æ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤ –∏–≥—Ä–æ–∫—É " + player.getName());
                player.sendMessage(ChatColor.GREEN + "–í—ã –ø–æ–ª—É—á–∏–ª–∏ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤.");
            }

        } catch (NumberFormatException e) {
            sender.sendMessage(ChatColor.RED + "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.");
        }
        return true;
    }

    private boolean handleAdd(CommandSender sender, String playerName, String amount) {
        if (!(sender instanceof ConsoleCommandSender) && !sender.hasPermission("tokensplus.admin")) {
            sender.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
            return true;
        }

        Player player = Bukkit.getPlayer(playerName);
        if (player == null) {
            sender.sendMessage(ChatColor.RED + "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return true;
        }

        try {
            int tokens = Integer.parseInt(amount);
            if (tokens <= 0) {
                sender.sendMessage(ChatColor.RED + "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.");
                return true;
            }

            tokenBalance.put(player.getName(), tokenBalance.getOrDefault(player.getName(), 0) + tokens);
            sender.sendMessage(ChatColor.GREEN + "–î–æ–±–∞–≤–ª–µ–Ω–æ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤ –∏–≥—Ä–æ–∫—É " + player.getName());
            player.sendMessage(ChatColor.GREEN + "–í—ã –ø–æ–ª—É—á–∏–ª–∏ " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤!");

        } catch (NumberFormatException e) {
            sender.sendMessage(ChatColor.RED + "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.");
        }
        return true;
    }

    private boolean handleSee(CommandSender sender, String playerName) {
        if (!(sender instanceof Player)) {
            sender.sendMessage(ChatColor.RED + "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∞–º–∏.");
            return true;
        }

        Player player = Bukkit.getPlayer(playerName);
        if (player == null) {
            sender.sendMessage(ChatColor.RED + "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return true;
        }

        int tokens = tokenBalance.getOrDefault(player.getName(), 0);
        sender.sendMessage(ChatColor.GREEN + "–£ –∏–≥—Ä–æ–∫–∞ " + player.getName() + " " + tokens + " —Ç–æ–∫–µ–Ω–æ–≤ üí†");
        return true;
    }

    private boolean handleHelp(CommandSender sender) {
        sender.sendMessage(ChatColor.YELLOW + "--- –ü–æ–º–æ—â—å Tokens+ ---");
        sender.sendMessage(ChatColor.GREEN + "/tok give <player> <amount>" + ChatColor.WHITE + " - –í—ã–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã –∏–≥—Ä–æ–∫—É");
        sender.sendMessage(ChatColor.GREEN + "/tok set <player> <amount>" + ChatColor.WHITE + " - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∏–≥—Ä–æ–∫—É");
        sender.sendMessage(ChatColor.GREEN + "/tok mines <player> <amount>" + ChatColor.WHITE + " - –£–º–µ–Ω—å—à–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —É –∏–≥—Ä–æ–∫–∞");
        sender.sendMessage(ChatColor.GREEN + "/tok see <player>" + ChatColor.WHITE + " - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞");
        sender.sendMessage(ChatColor.GREEN + "/tok took <player> <amount>" + ChatColor.WHITE + " - –ó–∞–±—Ä–∞—Ç—å —Ç–æ–∫–µ–Ω—ã —É –∏–≥—Ä–æ–∫–∞");
        sender.sendMessage(ChatColor.GREEN + "/tok add <player> <amount>" + ChatColor.WHITE + " - –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∏–≥—Ä–æ–∫—É");
        sender.sendMessage(ChatColor.GREEN + "/tok gui" + ChatColor.WHITE + " - –û—Ç–∫—Ä—ã—Ç—å GUI –º–µ–Ω—é");
        sender.sendMessage(ChatColor.GREEN + "/tok help" + ChatColor.WHITE + " - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ");
        return true;
    }

    private boolean handleGui(Player player) {
        Inventory gui = Bukkit.createInventory(null, 27, ChatColor.DARK_PURPLE + "Tokens+ Menu");

        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–º–∏ –ø–∞–Ω–µ–ª—è–º–∏
        ItemStack purplePane = new ItemStack(Material.PURPLE_STAINED_GLASS_PANE);
        ItemMeta purpleMeta = purplePane.getItemMeta();
        if (purpleMeta != null) {
            purpleMeta.setDisplayName(ChatColor.DARK_PURPLE + " ");
            purplePane.setItemMeta(purpleMeta);
        }

        for (int i = 0; i < 27; i++) {
            if (i == 13) continue; // –ü—Ä–æ–ø—É—Å–∫ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —Å–ª–æ—Ç–∞
            gui.setItem(i, purplePane);
        }

        // –ó–æ–ª–æ—Ç–æ –≤ —Ü–µ–Ω—Ç—Ä–µ
        ItemStack gold = new ItemStack(Material.GOLD_BLOCK);
        ItemMeta goldMeta = gold.getItemMeta();
        if (goldMeta != null) {
            goldMeta.setDisplayName(ChatColor.GOLD + "–í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã: " + tokenBalance.getOrDefault(player.getName(), 0));
            gold.setItemMeta(goldMeta);
        }
        gui.setItem(13, gold);

        // –ó–µ–ª–µ–Ω–∞—è –º–æ—Ä—Å–∫–∞—è –ª–∞–º–ø–∞
        ItemStack greenLantern = new ItemStack(Material.SEA_LANTERN);
        ItemMeta greenMeta = greenLantern.getItemMeta();
        if (greenMeta != null) {
            greenMeta.setDisplayName(ChatColor.GREEN + "–¢–æ–ø –ë–∞–ª–∞–Ω—Å");
            greenLantern.setItemMeta(greenMeta);
        }
        gui.setItem(22, greenLantern);

        // TNT —Å —Ä–µ–∫–ª–∞–º–æ–π
        ItemStack tnt = new ItemStack(Material.TNT);
        ItemMeta tntMeta = tnt.getItemMeta();
        if (tntMeta != null) {
            tntMeta.setDisplayName(ChatColor.RED + "Tokens+ —Å–æ–∑–¥–∞–Ω VerMaxTj55");
            tntMeta.setLore(java.util.Arrays.asList(ChatColor.GRAY + "Discord: @vermax55", ChatColor.GRAY + "–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –¥–æ–Ω–∞—Ç–æ–º!"));
            tnt.setItemMeta(tntMeta);
        }
        gui.setItem(10, tnt);

        player.openInventory(gui);
        return true;
    }

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        if (!tokenBalance.containsKey(event.getPlayer().getName())) {
            tokenBalance.put(event.getPlayer().getName(), 0);
        }
    }
}
